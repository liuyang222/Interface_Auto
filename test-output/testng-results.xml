<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="4" total="5" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="交易确认" duration-ms="30764" started-at="2016-07-11T10:30:40Z" finished-at="2016-07-11T10:31:11Z">
    <groups>
      <group name="CaseTransactionInit001">
        <method signature="CaseTransactionInit.CaseTransactionInit001(java.lang.String, int, java.lang.String)[pri:0, instance:com.suite.CaseTransactionInit@3c09711b]" name="CaseTransactionInit001" class="com.suite.CaseTransactionInit"/>
      </group> <!-- CaseTransactionInit001 -->
      <group name="CaseLogin001">
        <method signature="CaseLogin.CaseLogin001(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String)[pri:0, instance:com.suite.CaseLogin@6b143ee9]" name="CaseLogin001" class="com.suite.CaseLogin"/>
      </group> <!-- CaseLogin001 -->
      <group name="CaseTransactionApprove001">
        <method signature="CaseTransactionApprove.CaseTransactionApprove001(java.lang.String, int, java.lang.String)[pri:0, instance:com.suite.CaseTransactionApprove@7ac7a4e4]" name="CaseTransactionApprove001" class="com.suite.CaseTransactionApprove"/>
      </group> <!-- CaseTransactionApprove001 -->
      <group name="CaseTransactionOtp001">
        <method signature="CaseTransactionOtp.CaseTransactionOtp001(java.lang.String, int, java.lang.String)[pri:0, instance:com.suite.CaseTransactionOtp@4de8b406]" name="CaseTransactionOtp001" class="com.suite.CaseTransactionOtp"/>
      </group> <!-- CaseTransactionOtp001 -->
      <group name="CaseTransactionCreate001">
        <method signature="CaseTransactionCreate.CaseTransactionCreate001(java.lang.String, int, java.lang.String)[pri:0, instance:com.suite.CaseTransactionCreate@458ad742]" name="CaseTransactionCreate001" class="com.suite.CaseTransactionCreate"/>
      </group> <!-- CaseTransactionCreate001 -->
    </groups>
    <test name="登录-正常登录" duration-ms="30439" started-at="2016-07-11T10:30:40Z" finished-at="2016-07-11T10:31:10Z">
      <class name="com.suite.CaseLogin">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.suite.CaseLogin@6b143ee9]" name="beforeClass" is-config="true" duration-ms="186" started-at="2016-07-11T18:30:40Z" finished-at="2016-07-11T18:30:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.suite.CaseLogin@6b143ee9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2016-07-11T18:30:40Z" finished-at="2016-07-11T18:30:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="CaseLogin001(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String)[pri:0, instance:com.suite.CaseLogin@6b143ee9]" name="CaseLogin001" duration-ms="30099" started-at="2016-07-11T18:30:40Z" data-provider="LoginData001" finished-at="2016-07-11T18:31:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginData001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13710872022]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[che001]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{"platform":"ANDROID","deviceId":"120c83f7602791d0bef","mobileId":"866696027120060","deviceName":"HUAWEIHUAWEI GRA-UL00"}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [500]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [500]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:372)
	at org.testng.Assert.assertEquals(Assert.java:382)
	at com.acinterface.IDfbLogin.afterRequest(IDfbLogin.java:55)
	at com.http.AWebApiService.run(AWebApiService.java:48)
	at com.suite.CaseLogin.CaseLogin001(CaseLogin.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CaseLogin001 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.suite.CaseLogin@6b143ee9]" name="afterMethod" is-config="true" duration-ms="1" started-at="2016-07-11T18:31:10Z" finished-at="2016-07-11T18:31:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.suite.CaseLogin@6b143ee9]" name="afterClass" is-config="true" duration-ms="1" started-at="2016-07-11T18:31:10Z" finished-at="2016-07-11T18:31:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.suite.CaseLogin -->
    </test> <!-- 登录-正常登录 -->
    <test name="交易初始-正常初始化" duration-ms="37" started-at="2016-07-11T10:31:11Z" finished-at="2016-07-11T10:31:11Z">
      <class name="com.suite.CaseTransactionInit">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.suite.CaseTransactionInit@3c09711b]" name="beforeClass" is-config="true" duration-ms="2" started-at="2016-07-11T18:31:11Z" finished-at="2016-07-11T18:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.suite.CaseTransactionInit@3c09711b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2016-07-11T18:31:11Z" finished-at="2016-07-11T18:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="CaseTransactionInit001(java.lang.String, int, java.lang.String)[pri:0, instance:com.suite.CaseTransactionInit@3c09711b]" name="CaseTransactionInit001" duration-ms="29" started-at="2016-07-11T18:31:11Z" data-provider="TransactionInitData001" finished-at="2016-07-11T18:31:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TransactionInitData001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"sourcePhone":"13710872022","targetPhone":"16800000017","amount":"2","direction":"out","channel":"PC"}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [401]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [401]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:372)
	at org.testng.Assert.assertEquals(Assert.java:382)
	at com.acinterface.IDfbTransactionInit.afterRequest(IDfbTransactionInit.java:54)
	at com.http.AWebApiService.run(AWebApiService.java:48)
	at com.suite.CaseTransactionInit.CaseTransactionInit001(CaseTransactionInit.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CaseTransactionInit001 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.suite.CaseTransactionInit@3c09711b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2016-07-11T18:31:11Z" finished-at="2016-07-11T18:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.suite.CaseTransactionInit@3c09711b]" name="afterClass" is-config="true" duration-ms="0" started-at="2016-07-11T18:31:11Z" finished-at="2016-07-11T18:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.suite.CaseTransactionInit -->
    </test> <!-- 交易初始-正常初始化 -->
    <test name="交易创建-正常创建" duration-ms="33" started-at="2016-07-11T10:31:11Z" finished-at="2016-07-11T10:31:11Z">
      <class name="com.suite.CaseTransactionCreate">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.suite.CaseTransactionCreate@458ad742]" name="beforeClass" is-config="true" duration-ms="3" started-at="2016-07-11T18:31:11Z" finished-at="2016-07-11T18:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="CaseTransactionCreate001(java.lang.String, int, java.lang.String)[pri:0, instance:com.suite.CaseTransactionCreate@458ad742]" name="CaseTransactionCreate001" duration-ms="26" started-at="2016-07-11T18:31:11Z" data-provider="TransactionCreateData001" finished-at="2016-07-11T18:31:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TransatcionCreateData001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"transactionId":null,"royalty_paramet":"AF_2&&CF_0","totalAmount":"2"}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [201] but found [401]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [201] but found [401]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:372)
	at org.testng.Assert.assertEquals(Assert.java:382)
	at com.acinterface.IDfbTransactionCreate.afterRequest(IDfbTransactionCreate.java:44)
	at com.http.AWebApiService.run(AWebApiService.java:48)
	at com.suite.CaseTransactionCreate.CaseTransactionCreate001(CaseTransactionCreate.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CaseTransactionCreate001 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.suite.CaseTransactionCreate@458ad742]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-07-11T18:31:11Z" finished-at="2016-07-11T18:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.suite.CaseTransactionCreate@458ad742]" name="afterMethod" is-config="true" duration-ms="1" started-at="2016-07-11T18:31:11Z" finished-at="2016-07-11T18:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.suite.CaseTransactionCreate@458ad742]" name="afterClass" is-config="true" duration-ms="0" started-at="2016-07-11T18:31:11Z" finished-at="2016-07-11T18:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.suite.CaseTransactionCreate -->
    </test> <!-- 交易创建-正常创建 -->
    <test name="交易otp-正常获取Otp" duration-ms="32" started-at="2016-07-11T10:31:11Z" finished-at="2016-07-11T10:31:11Z">
      <class name="com.suite.CaseTransactionOtp">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.suite.CaseTransactionOtp@4de8b406]" name="beforeClass" is-config="true" duration-ms="3" started-at="2016-07-11T18:31:11Z" finished-at="2016-07-11T18:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.suite.CaseTransactionOtp@4de8b406]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2016-07-11T18:31:11Z" finished-at="2016-07-11T18:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="CaseTransactionOtp001(java.lang.String, int, java.lang.String)[pri:0, instance:com.suite.CaseTransactionOtp@4de8b406]" name="CaseTransactionOtp001" duration-ms="24" started-at="2016-07-11T18:31:11Z" data-provider="TransactionOtpData001" finished-at="2016-07-11T18:31:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TransactionOtpData001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"transaction":null}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [201] but found [401]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [201] but found [401]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:372)
	at org.testng.Assert.assertEquals(Assert.java:382)
	at com.acinterface.IDfbTransactionOtp.afterRequest(IDfbTransactionOtp.java:45)
	at com.http.AWebApiService.run(AWebApiService.java:48)
	at com.suite.CaseTransactionOtp.CaseTransactionOtp001(CaseTransactionOtp.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CaseTransactionOtp001 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.suite.CaseTransactionOtp@4de8b406]" name="afterClass" is-config="true" duration-ms="2" started-at="2016-07-11T18:31:11Z" finished-at="2016-07-11T18:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.suite.CaseTransactionOtp@4de8b406]" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-07-11T18:31:11Z" finished-at="2016-07-11T18:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.suite.CaseTransactionOtp -->
    </test> <!-- 交易otp-正常获取Otp -->
    <test name="交易确认-正常交易确认" duration-ms="191" started-at="2016-07-11T10:31:11Z" finished-at="2016-07-11T10:31:11Z">
      <class name="com.suite.CaseTransactionApprove">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.suite.CaseTransactionApprove@7ac7a4e4]" name="beforeClass" is-config="true" duration-ms="3" started-at="2016-07-11T18:31:11Z" finished-at="2016-07-11T18:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="CaseTransactionApprove001(java.lang.String, int, java.lang.String)[pri:0, instance:com.suite.CaseTransactionApprove@7ac7a4e4]" name="CaseTransactionApprove001" duration-ms="0" started-at="2016-07-11T18:31:11Z" data-provider="TransactionApproveData001" finished-at="2016-07-11T18:31:11Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:162)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1287)
	at org.testng.internal.Invoker.createParameters(Invoker.java:1004)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1093)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at com.util.ResultMap.getKey(ResultMap.java:24)
	at com.data.TransactionApproveData.TransactionApproveData001(TransactionApproveData.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:136)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CaseTransactionApprove001 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.suite.CaseTransactionApprove@7ac7a4e4]" name="afterClass" is-config="true" duration-ms="1" started-at="2016-07-11T18:31:11Z" finished-at="2016-07-11T18:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.suite.CaseTransactionApprove -->
    </test> <!-- 交易确认-正常交易确认 -->
  </suite> <!-- 交易确认 -->
</testng-results>
